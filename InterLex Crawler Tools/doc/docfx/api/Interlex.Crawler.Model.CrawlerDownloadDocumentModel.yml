### YamlMime:ManagedReference
items:
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  commentId: T:Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  id: CrawlerDownloadDocumentModel
  parent: Interlex.Crawler.Model
  children:
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(System.String,System.String,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.EmptySequence
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
  - Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
  langs:
  - csharp
  - vb
  name: CrawlerDownloadDocumentModel
  nameWithType: CrawlerDownloadDocumentModel
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  type: Class
  source:
    id: CrawlerDownloadDocumentModel
    path: ''
    startLine: 3271
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nModel for downloaded document\n"
  example: []
  syntax:
    content: public class CrawlerDownloadDocumentModel
    content.vb: Public Class CrawlerDownloadDocumentModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.EmptySequence
  commentId: F:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.EmptySequence
  id: EmptySequence
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: EmptySequence
  nameWithType: CrawlerDownloadDocumentModel.EmptySequence
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.EmptySequence
  type: Field
  source:
    id: EmptySequence
    path: ''
    startLine: 3277
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nEmpty sequence\n"
  example: []
  syntax:
    content: public static IReadOnlyCollection<CrawlerDownloadDocumentModel> EmptySequence
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Interlex.Crawler.Model.CrawlerDownloadDocumentModel}
    content.vb: Public Shared EmptySequence As IReadOnlyCollection(Of CrawlerDownloadDocumentModel)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(System.String,System.String,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(System.String,System.String,Interlex.Crawler.Model.HttpModel)
  id: Create(System.String,System.String,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: Create(String, String, HttpModel)
  nameWithType: CrawlerDownloadDocumentModel.Create(String, String, HttpModel)
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(System.String, System.String, Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: Create
    path: ''
    startLine: 3286
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nCreates new document\n"
  example: []
  syntax:
    content: public static CrawlerDownloadDocumentModel Create(string name, string url, HttpModel httpGet)
    parameters:
    - id: name
      type: System.String
      description: Name of the document
    - id: url
      type: System.String
      description: Url of the document
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
      description: Http response for the <code data-dev-comment-type="paramref" class="paramref">url</code>
    return:
      type: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
      description: ''
    content.vb: Public Shared Function Create(name As String, url As String, httpGet As HttpModel) As CrawlerDownloadDocumentModel
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  id: Create(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: Create(NameModel, String, HttpModel)
  nameWithType: CrawlerDownloadDocumentModel.Create(NameModel, String, HttpModel)
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create(Interlex.Crawler.Model.NameModel, System.String, Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: Create
    path: ''
    startLine: 3298
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nCreates new document\n"
  example: []
  syntax:
    content: public static CrawlerDownloadDocumentModel Create(NameModel name, string url, HttpModel httpGet)
    parameters:
    - id: name
      type: Interlex.Crawler.Model.NameModel
      description: Name of the document
    - id: url
      type: System.String
      description: Url of the document
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
      description: Http response for the <code data-dev-comment-type="paramref" class="paramref">url</code>
    return:
      type: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
      description: ''
    content.vb: Public Shared Function Create(name As NameModel, url As String, httpGet As HttpModel) As CrawlerDownloadDocumentModel
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
  commentId: P:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
  id: Name
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CrawlerDownloadDocumentModel.Name
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 3306
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nName of the document\n"
  example: []
  syntax:
    content: public NameModel Name { get; }
    parameters: []
    return:
      type: Interlex.Crawler.Model.NameModel
    content.vb: Public ReadOnly Property Name As NameModel
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
  commentId: P:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
  id: Url
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CrawlerDownloadDocumentModel.Url
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
  type: Property
  source:
    id: Url
    path: ''
    startLine: 3311
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nUrl of the document\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  commentId: P:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  id: HttpGet
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: HttpGet
  nameWithType: CrawlerDownloadDocumentModel.HttpGet
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  type: Property
  source:
    id: HttpGet
    path: ''
    startLine: 3316
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nHttp response\n"
  example: []
  syntax:
    content: public HttpModel HttpGet { get; }
    parameters: []
    return:
      type: Interlex.Crawler.Model.HttpModel
    content.vb: Public ReadOnly Property HttpGet As HttpModel
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
  commentId: P:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
  id: IsDownloaded
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: IsDownloaded
  nameWithType: CrawlerDownloadDocumentModel.IsDownloaded
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
  type: Property
  source:
    id: IsDownloaded
    path: ''
    startLine: 3321
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nTrue if the <xref href=\"Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet\" data-throw-if-not-resolved=\"false\"></xref> is not null\n"
  example: []
  syntax:
    content: public bool IsDownloaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDownloaded As Boolean
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)
  id: '#ctor(Interlex.Crawler.Model.NameModel,System.String,Interlex.Crawler.Model.HttpModel)'
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: CrawlerDownloadDocumentModel(NameModel, String, HttpModel)
  nameWithType: CrawlerDownloadDocumentModel.CrawlerDownloadDocumentModel(NameModel, String, HttpModel)
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.CrawlerDownloadDocumentModel(Interlex.Crawler.Model.NameModel, System.String, Interlex.Crawler.Model.HttpModel)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3329
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nCreates new instance\n"
  example: []
  syntax:
    content: public CrawlerDownloadDocumentModel(NameModel name, string url, HttpModel httpGet)
    parameters:
    - id: name
      type: Interlex.Crawler.Model.NameModel
      description: Name of the document
    - id: url
      type: System.String
      description: Url of the document
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
      description: Http response for <code data-dev-comment-type="paramref" class="paramref">url</code>
    content.vb: Public Sub New(name As NameModel, url As String, httpGet As HttpModel)
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource
  commentId: M:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource
  id: FreeResource
  parent: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  langs:
  - csharp
  - vb
  name: FreeResource()
  nameWithType: CrawlerDownloadDocumentModel.FreeResource()
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource()
  type: Method
  source:
    id: FreeResource
    path: ''
    startLine: 3339
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Model
  summary: "\nFree any resources holded as references (like the <xref href=\"Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet\" data-throw-if-not-resolved=\"false\"></xref> property)\n"
  example: []
  syntax:
    content: public void FreeResource()
    content.vb: Public Sub FreeResource
  overload: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Interlex.Crawler.Model
  commentId: N:Interlex.Crawler.Model
  name: Interlex.Crawler.Model
  nameWithType: Interlex.Crawler.Model
  fullName: Interlex.Crawler.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyCollection{Interlex.Crawler.Model.CrawlerDownloadDocumentModel}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Interlex.Crawler.Model.CrawlerDownloadDocumentModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<CrawlerDownloadDocumentModel>
  nameWithType: IReadOnlyCollection<CrawlerDownloadDocumentModel>
  fullName: System.Collections.Generic.IReadOnlyCollection<Interlex.Crawler.Model.CrawlerDownloadDocumentModel>
  nameWithType.vb: IReadOnlyCollection(Of CrawlerDownloadDocumentModel)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Interlex.Crawler.Model.CrawlerDownloadDocumentModel)
  name.vb: IReadOnlyCollection(Of CrawlerDownloadDocumentModel)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
    name: CrawlerDownloadDocumentModel
    nameWithType: CrawlerDownloadDocumentModel
    fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
    name: CrawlerDownloadDocumentModel
    nameWithType: CrawlerDownloadDocumentModel
    fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create
  name: Create
  nameWithType: CrawlerDownloadDocumentModel.Create
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Interlex.Crawler.Model.HttpModel
  commentId: T:Interlex.Crawler.Model.HttpModel
  parent: Interlex.Crawler.Model
  name: HttpModel
  nameWithType: HttpModel
  fullName: Interlex.Crawler.Model.HttpModel
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  commentId: T:Interlex.Crawler.Model.CrawlerDownloadDocumentModel
  parent: Interlex.Crawler.Model
  name: CrawlerDownloadDocumentModel
  nameWithType: CrawlerDownloadDocumentModel
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel
- uid: Interlex.Crawler.Model.NameModel
  commentId: T:Interlex.Crawler.Model.NameModel
  parent: Interlex.Crawler.Model
  name: NameModel
  nameWithType: NameModel
  fullName: Interlex.Crawler.Model.NameModel
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
  name: Name
  nameWithType: CrawlerDownloadDocumentModel.Name
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Name
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
  name: Url
  nameWithType: CrawlerDownloadDocumentModel.Url
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.Url
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  name: HttpGet
  nameWithType: CrawlerDownloadDocumentModel.HttpGet
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  commentId: P:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.HttpGet
  isExternal: true
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
  name: IsDownloaded
  nameWithType: CrawlerDownloadDocumentModel.IsDownloaded
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.IsDownloaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.#ctor
  name: CrawlerDownloadDocumentModel
  nameWithType: CrawlerDownloadDocumentModel.CrawlerDownloadDocumentModel
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.CrawlerDownloadDocumentModel
- uid: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource*
  commentId: Overload:Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource
  name: FreeResource
  nameWithType: CrawlerDownloadDocumentModel.FreeResource
  fullName: Interlex.Crawler.Model.CrawlerDownloadDocumentModel.FreeResource
