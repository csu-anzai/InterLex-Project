### YamlMime:ManagedReference
items:
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  commentId: T:Interlex.Crawler.Crawlers.Eurlex.Eurlex
  id: Eurlex
  parent: Interlex.Crawler.Crawlers.Eurlex
  children:
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor(Interlex.Crawler.Common.Http,ILog)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound(Interlex.Crawler.Model.HttpModel)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage(HtmlNode)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument(HtmlNode)
  - Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine(HtmlNode)
  langs:
  - csharp
  - vb
  name: Eurlex
  nameWithType: Eurlex
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  type: Class
  source:
    id: Eurlex
    path: ''
    startLine: 2105
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  summary: "\nRepresents crawler for eurlex documents.\nLegislation for the directory legislation classification with code 19.20 (Judicial cooperation in civil matters) + consolidated versions\nCaselaw for the directory caselaw classification with code 4.06.02 (Judicial cooperation in civil matters)\nJure documents.\n"
  example: []
  syntax:
    content: 'public class Eurlex : BaseHttpCrawler'
    content.vb: >-
      Public Class Eurlex
          Inherits BaseHttpCrawler
  inheritance:
  - System.Object
  - Interlex.Crawler.Crawlers.BaseHttpCrawler
  inheritedMembers:
  - Interlex.Crawler.Crawlers.BaseHttpCrawler.Logger
  - Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode,HtmlNode)
  - Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor(Interlex.Crawler.Common.Http,ILog)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor(Interlex.Crawler.Common.Http,ILog)
  id: '#ctor(Interlex.Crawler.Common.Http,ILog)'
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: Eurlex(Http, ILog)
  nameWithType: Eurlex.Eurlex(Http, ILog)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.Eurlex(Interlex.Crawler.Common.Http, ILog)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2109
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public Eurlex(Http http, ILog logger)
    parameters:
    - id: http
      type: Interlex.Crawler.Common.Http
    - id: logger
      type: ILog
    content.vb: Public Sub New(http As Http, logger As ILog)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  id: CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: CreatePackageDocumentName(HtmlNode, HttpModel)
  nameWithType: Eurlex.CreatePackageDocumentName(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName(HtmlNode, Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: CreatePackageDocumentName
    path: ''
    startLine: 2123
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override NameModel CreatePackageDocumentName(HtmlNode anchor, HttpModel httpGet)
    parameters:
    - id: anchor
      type: HtmlNode
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
    return:
      type: Interlex.Crawler.Model.NameModel
    content.vb: Public Overrides Function CreatePackageDocumentName(anchor As HtmlNode, httpGet As HttpModel) As NameModel
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  id: CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: CreatePackageName(HtmlNode, HttpModel)
  nameWithType: Eurlex.CreatePackageName(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName(HtmlNode, Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: CreatePackageName
    path: ''
    startLine: 2129
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override NameModel CreatePackageName(HtmlNode anchor, HttpModel httpGet)
    parameters:
    - id: anchor
      type: HtmlNode
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
    return:
      type: Interlex.Crawler.Model.NameModel
    content.vb: Public Overrides Function CreatePackageName(anchor As HtmlNode, httpGet As HttpModel) As NameModel
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  id: GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: GetTwoLetterLanguage(HttpModel, HtmlNode)
  nameWithType: Eurlex.GetTwoLetterLanguage(HttpModel, HtmlNode)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel, HtmlNode)
  type: Method
  source:
    id: GetTwoLetterLanguage
    path: ''
    startLine: 2151
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override string GetTwoLetterLanguage(HttpModel httpGet, HtmlNode anchor)
    parameters:
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
    - id: anchor
      type: HtmlNode
    return:
      type: System.String
    content.vb: Public Overrides Function GetTwoLetterLanguage(httpGet As HttpModel, anchor As HtmlNode) As String
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound(Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound(Interlex.Crawler.Model.HttpModel)
  id: IsNotFound(Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: IsNotFound(HttpModel)
  nameWithType: Eurlex.IsNotFound(HttpModel)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound(Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: IsNotFound
    path: ''
    startLine: 2171
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override bool IsNotFound(HttpModel httpGet)
    parameters:
    - id: httpGet
      type: Interlex.Crawler.Model.HttpModel
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsNotFound(httpGet As HttpModel) As Boolean
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage(HtmlNode)
  id: IsPackage(HtmlNode)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: IsPackage(HtmlNode)
  nameWithType: Eurlex.IsPackage(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage(HtmlNode)
  type: Method
  source:
    id: IsPackage
    path: ''
    startLine: 2176
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override bool IsPackage(HtmlNode anchor)
    parameters:
    - id: anchor
      type: HtmlNode
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsPackage(anchor As HtmlNode) As Boolean
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument(HtmlNode)
  id: IsPackageDocument(HtmlNode)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: IsPackageDocument(HtmlNode)
  nameWithType: Eurlex.IsPackageDocument(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument(HtmlNode)
  type: Method
  source:
    id: IsPackageDocument
    path: ''
    startLine: 2194
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override bool IsPackageDocument(HtmlNode anchor)
    parameters:
    - id: anchor
      type: HtmlNode
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsPackageDocument(anchor As HtmlNode) As Boolean
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine(HtmlNode)
  id: ShouldExamine(HtmlNode)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: ShouldExamine(HtmlNode)
  nameWithType: Eurlex.ShouldExamine(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine(HtmlNode)
  type: Method
  source:
    id: ShouldExamine
    path: ''
    startLine: 2199
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override bool ShouldExamine(HtmlNode anchor)
    parameters:
    - id: anchor
      type: HtmlNode
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ShouldExamine(anchor As HtmlNode) As Boolean
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  id: GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.Eurlex.Eurlex
  langs:
  - csharp
  - vb
  name: GenerateAdditionalUrls(HtmlNode, HttpModel)
  nameWithType: Eurlex.GenerateAdditionalUrls(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls(HtmlNode, Interlex.Crawler.Model.HttpModel)
  type: Method
  source:
    id: GenerateAdditionalUrls
    path: ''
    startLine: 2208
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Crawlers.Eurlex
  syntax:
    content: public override IReadOnlyCollection<string> GenerateAdditionalUrls(HtmlNode anchor, HttpModel httpModel)
    parameters:
    - id: anchor
      type: HtmlNode
    - id: httpModel
      type: Interlex.Crawler.Model.HttpModel
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Overrides Function GenerateAdditionalUrls(anchor As HtmlNode, httpModel As HttpModel) As IReadOnlyCollection(Of String)
  overridden: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  overload: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Interlex.Crawler.Crawlers.Eurlex
  commentId: N:Interlex.Crawler.Crawlers.Eurlex
  name: Interlex.Crawler.Crawlers.Eurlex
  nameWithType: Interlex.Crawler.Crawlers.Eurlex
  fullName: Interlex.Crawler.Crawlers.Eurlex
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler
  commentId: T:Interlex.Crawler.Crawlers.BaseHttpCrawler
  parent: Interlex.Crawler.Crawlers
  name: BaseHttpCrawler
  nameWithType: BaseHttpCrawler
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.Logger
  commentId: F:Interlex.Crawler.Crawlers.BaseHttpCrawler.Logger
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  name: Logger
  nameWithType: BaseHttpCrawler.Logger
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.Logger
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode,HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode,HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: ShouldIncludeParentPageAsDocument(HtmlNode, HtmlNode)
  nameWithType: BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode, HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode, HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode,HtmlNode)
    name: ShouldIncludeParentPageAsDocument
    nameWithType: BaseHttpCrawler.ShouldIncludeParentPageAsDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument(HtmlNode,HtmlNode)
    name: ShouldIncludeParentPageAsDocument
    nameWithType: BaseHttpCrawler.ShouldIncludeParentPageAsDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludeParentPageAsDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: ShouldIncludePackgeAsDocument(HtmlNode)
  nameWithType: BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
    name: ShouldIncludePackgeAsDocument
    nameWithType: BaseHttpCrawler.ShouldIncludePackgeAsDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument(HtmlNode)
    name: ShouldIncludePackgeAsDocument
    nameWithType: BaseHttpCrawler.ShouldIncludePackgeAsDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldIncludePackgeAsDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Interlex.Crawler.Crawlers
  commentId: N:Interlex.Crawler.Crawlers
  name: Interlex.Crawler.Crawlers
  nameWithType: Interlex.Crawler.Crawlers
  fullName: Interlex.Crawler.Crawlers
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.#ctor
  name: Eurlex
  nameWithType: Eurlex.Eurlex
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.Eurlex
- uid: Interlex.Crawler.Common.Http
  commentId: T:Interlex.Crawler.Common.Http
  parent: Interlex.Crawler.Common
  name: Http
  nameWithType: Http
  fullName: Interlex.Crawler.Common.Http
- uid: ILog
  isExternal: true
  name: ILog
  nameWithType: ILog
  fullName: ILog
- uid: Interlex.Crawler.Common
  commentId: N:Interlex.Crawler.Common
  name: Interlex.Crawler.Common
  nameWithType: Interlex.Crawler.Common
  fullName: Interlex.Crawler.Common
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: CreatePackageDocumentName(HtmlNode, HttpModel)
  nameWithType: BaseHttpCrawler.CreatePackageDocumentName(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode, Interlex.Crawler.Model.HttpModel)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: CreatePackageDocumentName
    nameWithType: BaseHttpCrawler.CreatePackageDocumentName
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: CreatePackageDocumentName
    nameWithType: BaseHttpCrawler.CreatePackageDocumentName
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageDocumentName
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName
  name: CreatePackageDocumentName
  nameWithType: Eurlex.CreatePackageDocumentName
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageDocumentName
- uid: HtmlNode
  isExternal: true
  name: HtmlNode
  nameWithType: HtmlNode
  fullName: HtmlNode
- uid: Interlex.Crawler.Model.HttpModel
  commentId: T:Interlex.Crawler.Model.HttpModel
  parent: Interlex.Crawler.Model
  name: HttpModel
  nameWithType: HttpModel
  fullName: Interlex.Crawler.Model.HttpModel
- uid: Interlex.Crawler.Model.NameModel
  commentId: T:Interlex.Crawler.Model.NameModel
  parent: Interlex.Crawler.Model
  name: NameModel
  nameWithType: NameModel
  fullName: Interlex.Crawler.Model.NameModel
- uid: Interlex.Crawler.Model
  commentId: N:Interlex.Crawler.Model
  name: Interlex.Crawler.Model
  nameWithType: Interlex.Crawler.Model
  fullName: Interlex.Crawler.Model
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: CreatePackageName(HtmlNode, HttpModel)
  nameWithType: BaseHttpCrawler.CreatePackageName(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode, Interlex.Crawler.Model.HttpModel)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: CreatePackageName
    nameWithType: BaseHttpCrawler.CreatePackageName
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: CreatePackageName
    nameWithType: BaseHttpCrawler.CreatePackageName
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.CreatePackageName
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName
  name: CreatePackageName
  nameWithType: Eurlex.CreatePackageName
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.CreatePackageName
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: GetTwoLetterLanguage(HttpModel, HtmlNode)
  nameWithType: BaseHttpCrawler.GetTwoLetterLanguage(HttpModel, HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel, HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
    name: GetTwoLetterLanguage
    nameWithType: BaseHttpCrawler.GetTwoLetterLanguage
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage(Interlex.Crawler.Model.HttpModel,HtmlNode)
    name: GetTwoLetterLanguage
    nameWithType: BaseHttpCrawler.GetTwoLetterLanguage
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GetTwoLetterLanguage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage
  name: GetTwoLetterLanguage
  nameWithType: Eurlex.GetTwoLetterLanguage
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GetTwoLetterLanguage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  name: IsNotFound(HttpModel)
  nameWithType: BaseHttpCrawler.IsNotFound(HttpModel)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
    name: IsNotFound
    nameWithType: BaseHttpCrawler.IsNotFound
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound
  - name: (
    nameWithType: (
    fullName: (
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound(Interlex.Crawler.Model.HttpModel)
    name: IsNotFound
    nameWithType: BaseHttpCrawler.IsNotFound
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsNotFound
  - name: (
    nameWithType: (
    fullName: (
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound
  name: IsNotFound
  nameWithType: Eurlex.IsNotFound
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsNotFound
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: IsPackage(HtmlNode)
  nameWithType: BaseHttpCrawler.IsPackage(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
    name: IsPackage
    nameWithType: BaseHttpCrawler.IsPackage
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage(HtmlNode)
    name: IsPackage
    nameWithType: BaseHttpCrawler.IsPackage
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackage
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage
  name: IsPackage
  nameWithType: Eurlex.IsPackage
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackage
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: IsPackageDocument(HtmlNode)
  nameWithType: BaseHttpCrawler.IsPackageDocument(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
    name: IsPackageDocument
    nameWithType: BaseHttpCrawler.IsPackageDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument(HtmlNode)
    name: IsPackageDocument
    nameWithType: BaseHttpCrawler.IsPackageDocument
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.IsPackageDocument
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument
  name: IsPackageDocument
  nameWithType: Eurlex.IsPackageDocument
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.IsPackageDocument
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: ShouldExamine(HtmlNode)
  nameWithType: BaseHttpCrawler.ShouldExamine(HtmlNode)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
    name: ShouldExamine
    nameWithType: BaseHttpCrawler.ShouldExamine
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine(HtmlNode)
    name: ShouldExamine
    nameWithType: BaseHttpCrawler.ShouldExamine
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.ShouldExamine
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine
  name: ShouldExamine
  nameWithType: Eurlex.ShouldExamine
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.ShouldExamine
- uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  commentId: M:Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
  parent: Interlex.Crawler.Crawlers.BaseHttpCrawler
  isExternal: true
  name: GenerateAdditionalUrls(HtmlNode, HttpModel)
  nameWithType: BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode, HttpModel)
  fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode, Interlex.Crawler.Model.HttpModel)
  spec.csharp:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: GenerateAdditionalUrls
    nameWithType: BaseHttpCrawler.GenerateAdditionalUrls
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls(HtmlNode,Interlex.Crawler.Model.HttpModel)
    name: GenerateAdditionalUrls
    nameWithType: BaseHttpCrawler.GenerateAdditionalUrls
    fullName: Interlex.Crawler.Crawlers.BaseHttpCrawler.GenerateAdditionalUrls
  - name: (
    nameWithType: (
    fullName: (
  - uid: HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Interlex.Crawler.Model.HttpModel
    name: HttpModel
    nameWithType: HttpModel
    fullName: Interlex.Crawler.Model.HttpModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls*
  commentId: Overload:Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls
  name: GenerateAdditionalUrls
  nameWithType: Eurlex.GenerateAdditionalUrls
  fullName: Interlex.Crawler.Crawlers.Eurlex.Eurlex.GenerateAdditionalUrls
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<String>
  nameWithType: IReadOnlyCollection<String>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.String>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
