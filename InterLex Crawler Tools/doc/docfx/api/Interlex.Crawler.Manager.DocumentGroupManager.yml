### YamlMime:ManagedReference
items:
- uid: Interlex.Crawler.Manager.DocumentGroupManager
  commentId: T:Interlex.Crawler.Manager.DocumentGroupManager
  id: DocumentGroupManager
  parent: Interlex.Crawler.Manager
  children:
  - Interlex.Crawler.Manager.DocumentGroupManager.#ctor
  - Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup(DocumentGroupModel)
  - Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId(System.String)
  langs:
  - csharp
  - vb
  name: DocumentGroupManager
  nameWithType: DocumentGroupManager
  fullName: Interlex.Crawler.Manager.DocumentGroupManager
  type: Class
  source:
    id: DocumentGroupManager
    path: ''
    startLine: 2672
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Manager
  summary: "\nRepresents class providing database persistance capabilities for document groups\n"
  example: []
  syntax:
    content: public class DocumentGroupManager
    content.vb: Public Class DocumentGroupManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Interlex.Crawler.Manager.DocumentGroupManager.#ctor
  commentId: M:Interlex.Crawler.Manager.DocumentGroupManager.#ctor
  id: '#ctor'
  parent: Interlex.Crawler.Manager.DocumentGroupManager
  langs:
  - csharp
  - vb
  name: DocumentGroupManager()
  nameWithType: DocumentGroupManager.DocumentGroupManager()
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.DocumentGroupManager()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2679
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Manager
  summary: "\nCreates new instance\n"
  example: []
  syntax:
    content: public DocumentGroupManager()
    content.vb: Public Sub New
  overload: Interlex.Crawler.Manager.DocumentGroupManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup(DocumentGroupModel)
  commentId: M:Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup(DocumentGroupModel)
  id: AddOrUpdateDocumentGroup(DocumentGroupModel)
  parent: Interlex.Crawler.Manager.DocumentGroupManager
  langs:
  - csharp
  - vb
  name: AddOrUpdateDocumentGroup(DocumentGroupModel)
  nameWithType: DocumentGroupManager.AddOrUpdateDocumentGroup(DocumentGroupModel)
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup(DocumentGroupModel)
  type: Method
  source:
    id: AddOrUpdateDocumentGroup
    path: ''
    startLine: 2689
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Manager
  summary: "\nAdd or update the speicified document group to the database using the <see cref=\"!:DocumentGroupModel.Name\"></see> property to match if the document group exists in the database\n"
  example: []
  syntax:
    content: public bool AddOrUpdateDocumentGroup(DocumentGroupModel crawledDocumentGroup)
    parameters:
    - id: crawledDocumentGroup
      type: DocumentGroupModel
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AddOrUpdateDocumentGroup(crawledDocumentGroup As DocumentGroupModel) As Boolean
  overload: Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId(System.String)
  commentId: M:Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId(System.String)
  id: GetOrCreateCrawlerId(System.String)
  parent: Interlex.Crawler.Manager.DocumentGroupManager
  langs:
  - csharp
  - vb
  name: GetOrCreateCrawlerId(String)
  nameWithType: DocumentGroupManager.GetOrCreateCrawlerId(String)
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId(System.String)
  type: Method
  source:
    id: GetOrCreateCrawlerId
    path: ''
    startLine: 2713
  assemblies:
  - cs.temp.dll
  namespace: Interlex.Crawler.Manager
  summary: "\nReturns the crawler id with the specified name. If the crawler does not exists creates the crawler in the database and returns the id\n"
  example: []
  syntax:
    content: public int GetOrCreateCrawlerId(string crawlerName)
    parameters:
    - id: crawlerName
      type: System.String
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetOrCreateCrawlerId(crawlerName As String) As Integer
  overload: Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Interlex.Crawler.Manager
  commentId: N:Interlex.Crawler.Manager
  name: Interlex.Crawler.Manager
  nameWithType: Interlex.Crawler.Manager
  fullName: Interlex.Crawler.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Interlex.Crawler.Manager.DocumentGroupManager.#ctor*
  commentId: Overload:Interlex.Crawler.Manager.DocumentGroupManager.#ctor
  name: DocumentGroupManager
  nameWithType: DocumentGroupManager.DocumentGroupManager
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.DocumentGroupManager
- uid: Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup*
  commentId: Overload:Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup
  name: AddOrUpdateDocumentGroup
  nameWithType: DocumentGroupManager.AddOrUpdateDocumentGroup
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.AddOrUpdateDocumentGroup
- uid: DocumentGroupModel
  commentId: '!:DocumentGroupModel'
  isExternal: true
  name: DocumentGroupModel
  nameWithType: DocumentGroupModel
  fullName: DocumentGroupModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId*
  commentId: Overload:Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId
  name: GetOrCreateCrawlerId
  nameWithType: DocumentGroupManager.GetOrCreateCrawlerId
  fullName: Interlex.Crawler.Manager.DocumentGroupManager.GetOrCreateCrawlerId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
